package com.farm.javaFiles.functions;

import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.ExecutionException;

import com.farm.firebase_connection.DataService;
import com.farm.javaFiles.Screens.FarmImplements;
import com.farm.javaFiles.Screens.Labor;
import com.farm.javaFiles.loginPage.AgricultureUI;

import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.CheckBox;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.stage.Stage;

public class FarmAdFormExample {

    Stage stage;
     public FarmAdFormExample(Stage stage){
        this.stage = stage ;
    }

    String imageLink  ;

    public void farmingImplementsRegister(Stage primaryStage){

        Label titleLabel=new Label("Farm and Agri Equipments");
        titleLabel.setFont(Font.font("Arial", FontWeight.THIN, 25));

        Label nameLabel = new Label("Name*");
        TextField nameField = new TextField();

        Label productLabel = new Label("Product Name*");
        TextField productField = new TextField();
        productField.setPromptText("E.g.Massey Ferguson 6028 28 HP Tractor, 4WD");
        // propertyTypeField.setPrefWidth(300);

        Label productCategroryLabel = new Label("Category*");
        TextField productCategoryField = new TextField();
        productCategoryField.setPromptText("E.g. Tractor,Harvestor,etc");

        Label rentalDurationLabel = new Label("Rental Duration*");
        ComboBox<String> rentalDurationComboBox = new ComboBox<>();
        rentalDurationComboBox.getItems().addAll("PerHour", "PerDay", "PerWeek");
        rentalDurationComboBox.setValue("Per Hour");

        Label rentalFeeLabel = new Label("Rental Fee*");
        TextField rentalFeeField = new TextField();
        rentalFeeField.setPromptText("Input price");
        
        CheckBox fixedChargesCheckBox = new CheckBox("Fixed charges");

        Label cityTownLabel = new Label("City/Town*");
        TextField cityTownField = new TextField();

        Label localityLabel = new Label("Locality*");
        TextField localityField = new TextField();

        Label mobileNumberLabel = new Label("Mobile Number*");
        TextField mobileNumberField = new TextField();

        Label descriptionLabel = new Label("Description");
        
        TextArea descriptionArea = new TextArea();
        descriptionArea.setWrapText(true);
        descriptionArea.setPrefWidth(300);  
        descriptionArea.setPrefHeight(100); 
        descriptionArea.setPromptText("A few lines about your product and its quality will get you more business reach.");
        descriptionArea.setWrapText(true);
        addTextLimiter(descriptionArea, 300);
        

        Label characterCountLabel = new Label("Character Count (0/300)");
        descriptionArea.textProperty().addListener((observable, oldValue, newValue) -> {
            characterCountLabel.setText("Character Count (" + newValue.length() + "/300)");
        });

        // Image upload section
        Label imageUploadLabel = new Label("We suggest you to upload image(s) to gain more business reach. The first image is the AD profile picture.*");
        
        Image uploadImage=new Image("assets/images/farmingImplements/imageUpload.jpg");
        // ImageView uploadImageView=new ImageView(uploadImage);
        // uploadImageView.setFitHeight(30);
        // uploadImageView.setFitWidth(30);

        HBox imageUploadBox = new HBox(10);
        for (int i = 0; i < 4; i++) {
            ImageView uploadImageView=new ImageView(uploadImage);
            uploadImageView.setFitHeight(30);
            uploadImageView.setFitWidth(30);
            Button uploadButton = new Button("",uploadImageView);
            uploadButton.setStyle(" -fx-border-color:grey; -fx-border-width: 2;-fx-border-style: dashed; -fx-background-color: white");
            uploadButton.getStyleClass().add("image-button");
            uploadButton.setPrefSize(80, 80);

            uploadButton.setOnAction(e->{
                ImagePickerExample obj = new ImagePickerExample(primaryStage);
                obj.getImage();
                imageLink = obj.imageLink ;
            });
            
            imageUploadBox.getChildren().add(uploadButton);
          
        }

        Label adTitleLabel = new Label("Your Ad Title (Autogenerated)");

        // Post Ad Button
        Button postAdButton = new Button("Post Ad");
        postAdButton.setStyle("-fx-background-color: green; -fx-background-radius: 15; -fx-text-fill: white;");
        postAdButton.setOnAction(e->{
            Map<String,String> data=new HashMap<>();

            data.put("ProductName",productField.getText());
            data.put("RentalDuration",rentalDurationComboBox.getValue());
            data.put("RentalFees",rentalFeeField.getText());
            data.put("FixedCharges",fixedChargesCheckBox.getText());
            data.put("City",cityTownField.getText());
            data.put("Locality",localityField.getText());
            data.put("MobileNumber",mobileNumberField.getText());
            data.put("Description",descriptionArea.getText());
            data.put("FarmImplementImage",imageLink);
            data.put("Category",productCategoryField.getText());
            data.put("Name",nameField.getText());
             
            try{

               
               AgricultureUI.farmImplementsData.add(data);
               DataService.addData("FarmImplements",productField.getText(),data);
                productField.clear();
                rentalFeeField.clear();
                nameField.clear();
                cityTownField.clear();
                localityField.clear();
                mobileNumberField.clear();
                descriptionArea.clear();
               showAlert("Success", "Data added successfully");




             }catch(ExecutionException | InterruptedException ex){
                 ex.printStackTrace();
                showAlert("Error", "Failed to add data");
             }  
            
        });

        Button goBackButton = new Button("Go back");
        goBackButton.setStyle("-fx-background-color: green; -fx-background-radius: 15; -fx-text-fill: white;");
            goBackButton.setOnAction(e->{
                FarmImplements obj  = new FarmImplements(stage);
                obj.getfarmImplements();
        });

       

        // Layout setup
        GridPane gridPane = new GridPane();
        gridPane.setPadding(new Insets(20));
        gridPane.setHgap(10);
        gridPane.setVgap(10);

        gridPane.add(nameLabel,0,0);
        gridPane.add(nameField,0,1,2,1);
        gridPane.add(productLabel, 0, 2);
        gridPane.add(productField,  0, 3, 2, 1);
        gridPane.add(productCategroryLabel,2,2);
        gridPane.add(productCategoryField,2,3,2,1);

        gridPane.add(rentalDurationLabel, 0, 4);
        gridPane.add(rentalDurationComboBox, 0, 5);
        gridPane.add(rentalFeeLabel, 1, 4);
        gridPane.add(rentalFeeField, 1, 5);
        gridPane.add(fixedChargesCheckBox, 2, 5);

        gridPane.add(cityTownLabel, 0, 6);
        gridPane.add(cityTownField, 0, 7);
        gridPane.add(localityLabel, 1, 6);
        gridPane.add(localityField, 1, 7);
        gridPane.add(mobileNumberLabel, 0, 8);
        gridPane.add(mobileNumberField, 0, 9);
        gridPane.add(descriptionLabel, 0, 10, 3, 1);
        gridPane.add(descriptionArea, 0, 11, 3, 1);
        gridPane.add(characterCountLabel, 2, 12);

        VBox vBox = new VBox(10);
        vBox.setPadding(new Insets(20));
        vBox.getChildren().addAll(titleLabel,gridPane, imageUploadLabel, imageUploadBox, adTitleLabel, postAdButton,goBackButton);
       
        // Create a scene and set it to the stage
        Scene scene = new Scene(vBox, 1470, 900);
        primaryStage.setTitle("Farm & Agri Products");
        primaryStage.setScene(scene);
        primaryStage.show();
    }

    private void addTextLimiter(TextArea textArea, int maxLength) {
        textArea.textProperty().addListener((observable, oldValue, newValue) -> {
            if (newValue.length() > maxLength) {
                textArea.setText(oldValue);
            }
        });
    }

      void showAlert(String title, String message) {
        // Alert alert = new Alert(Alert.AlertType.INFORMATION);
        Alert alert = new Alert(Alert.AlertType.INFORMATION);
        alert.setTitle(title);
        alert.setHeaderText(null);
        alert.setContentText(message);
        alert.showAndWait();
    }

}
